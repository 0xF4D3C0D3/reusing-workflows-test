name: build and push to ecr

on:
  workflow_call:
    inputs:
      AWS_ROLE_ARN:
        description: 'Github Action이 AWS 자원에 접근할 때 필요한 Role의 arn'
        required: true
        type: string
      AWS_REGION:
        description: 'AWS 리전'
        default: 'ap-northeast-1'
        required: false
        type: string
      ECR_REPO_NAME:
        description: 'ECR 레포 이름. Github 레포와 같다면 빈값을 사용'
        default: ''
        required: false
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ inputs.AWS_ROLE_ARN }}
          aws-region: ${{ inputs.AWS_REGION }}

      - name: login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: checkout repository code
        uses: actions/checkout@v3

      - name: set REGISTRY_IMAGE and TAG env var
        run: |
          REPO_NAME="${{ inputs.ECR_REPO_NAME }}"
          REPO_NAME="${REPO_NAME:-$(echo "${{ github.repository }}" | awk -F/ '{print $2}' )}"
        
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)
        
          # to avoid `repository name must be lowercase` error when you have uppercase in your name
          echo REGISTRY_IMAGE=$(echo "${{ steps.login-ecr.outputs.registry }}/$REPO_NAME" | tr '[A-Z]' '[a-z]') >> $GITHUB_ENV
          
          # / is not allowed in docker tags
          echo TAG=$(echo "${{ github.ref_name }}-$SHORT_SHA-${{ github.run_id }}" | tr '/' '_') >> $GITHUB_ENV
          echo TAG_LATEST=$(echo "${{ github.ref_name }}-latest" | tr '/' '_') >> $GITHUB_ENV

      - name: build and push images
        uses: docker/build-push-action@v3
        with:
          tags: |
            ${{ env.REGISTRY_IMAGE }}:${{ env.TAG }}
            ${{ env.REGISTRY_IMAGE }}:${{ env.TAG_LATEST }}
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=gha,scope=${{ github.workflow }}
          cache-to: type=gha,scope=${{ github.workflow }}
          
